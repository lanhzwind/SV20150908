if(WIN32)
	find_path(INTEL_REDIST_DIR names fmpich2.dll PATHS $ENV{PATH})
	file(GLOB INTEL_REDIST_DLLS "${INTEL_REDIST_DIR}/*.dll")
	set(CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} ${INTEL_REDIST_DLLS})
	set(RM_DLL "fmpich2.dll;fmpich2g.dll;mpich2mpi.dll")
	set(RM_DLL_FULL)
	foreach(dll ${RM_DLL})
		sv_list_match(tmp ${dll} ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS})
		list(APPEND RM_DLL_FULL ${tmp})
	endforeach()
	list(REMOVE_ITEM CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS ${RM_DLL_FULL})
endif()

install(PROGRAMS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} 
	DESTINATION ${SIMVASCULAR_INSTALL_RUNTIME_DIR}
	COMPONENT SystemRuntimes)

INCLUDE(InstallRequiredSystemLibraries)
include(CPackComponent)

SET(CPACK_PACKAGE_NAME "SimVascular")
SET(CPACK_PACKAGE_VENDOR "SimVascular.org")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "SimVascular - Cardiovascular Modeling and Simulation Application")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/license.txt")
SET(CPACK_PACKAGE_VERSION_MAJOR ${SIMVASCULAR_MAJOR_VERSION})
SET(CPACK_PACKAGE_VERSION_MINOR ${SIMVASCULAR_MINOR_VERSION})
SET(CPACK_PACKAGE_VERSION_PATCH ${SIMVASCULAR_PATCH_VERSION})
set(INSTALL_TYPE_STR)

if(Licensed_PARASOLID)
	set(INSTALL_TYPE_STR "${INSTALL_TYPE_STR}-parasolid")
endif()


SET(CPACK_INSTALL_CMAKE_PROJECTS "${CPACK_INSTALL_CMAKE_PROJECTS};${${PROJECT_NAME}_BINARY_DIR};SimVascular;ALL;/")
if(SimVascular_SUPERBUILD)
	SET(CPACK_INSTALL_CMAKE_PROJECTS "${CPACK_INSTALL_CMAKE_PROJECTS};${${PROJECT_NAME}_BINARY_DIR}/build;SimVascular-build;ALL;/")
endif()
if(SIMVASCULAR_INSTALL_EXTERNALS)
	IF(EXISTS "${VTK_DIR}/CMakeCache.txt")
		SET(CPACK_INSTALL_CMAKE_PROJECTS "${CPACK_INSTALL_CMAKE_PROJECTS};${VTK_DIR};VTK;ALL;/")
	ENDIF(EXISTS "${VTK_DIR}/CMakeCache.txt")
	IF(EXISTS "${ITK_DIR}/CMakeCache.txt")
		SET(CPACK_INSTALL_CMAKE_PROJECTS "${CPACK_INSTALL_CMAKE_PROJECTS};${ITK_DIR};ITK;ALL;/")
	ENDIF(EXISTS "${ITK_DIR}/CMakeCache.txt")
endif()

#------------------------------------------------

# foreach(_t Core Plugin Module)
# 	string(TOUPPER "${_t}" _tupper)

# 	set(CPACK_COMPONENT_${_tupper}EXECUTABLES_GROUP "${_t}")
# 	set(CPACK_COMPONENT_${_tupper}CORELIBRARIES_GROUP "${_t}")
# 	set(CPACK_COMPONENT_${_tupper}COREEHEADERS_GROUP "${_t}")
# 	set(CPACK_COMPONENT_${_tupper}EXECUTABLES_DISPLAY_NAME "Application Files")
# 	set(CPACK_COMPONENT_${_tupper}LIBRARIES_DISPLAY_NAME "Libraries")
# 	set(CPACK_COMPONENT_${_tupper}HEADERS_DISPLAY_NAME "Headers")
# 	set(CPACK_COMPONENT_${_tupper}EXECUTABLES_DEPENDS ${_t}Libraries)

# 	list(APPEND CPACK_COMPONENTS_ALL ${_t}Executables ${_t}Libraries ${_t}Headers)
# endforeach()

# set(CPACK_COMPONENT_GROUP_CORE_DISPLAY_NAME "Main Application")
# set(CPACK_COMPONENT_GROUP_CORE_DESCRIPTION "Core files required for all components in SimVascular")

# set(CPACK_COMPONENT_GROUP_PLUGIN_DISPLAY_NAME "Plugins")
# set(CPACK_COMPONENT_GROUP_PLUGIN_DESCRIPTION "Plugins that provide expanded functionality for SimVascular")

# set(CPACK_COMPONENT_GROUP_MODULE_DISPLAY_NAME "FlowSolver Apps")
# set(CPACK_COMPONENT_GROUP_MODULE_DESCRIPTION "Software to compute blood flow")




#------------------------------------------------

if(LINUX)
	SET(CPACK_GENERATOR "TGZ")
	set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY ON)
	SET(CPACK_PACKAGE_FILE_NAME "simvascular-${SIMVASCULAR_FULL_VERSION}-Linux-x64${INSTALL_TYPE_STR}")
endif()


IF(APPLE)
	#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/OSX/simvascular.sh.in ${CMAKE_CURRENT_SOURCE_DIR}/OSX/simvascular.sh)

	# Use the bundle-generator on osx ...
	SET(CPACK_GENERATOR "Bundle")
	SET(CPACK_BUNDLE_ICON "${CMAKE_CURRENT_SOURCE_DIR}/OSX/SimVascular.icns")
	if(SimVascular_RELEASE_TYPE MATCHES "^Release$")
		set(CPACK_BUNDLE_NAME "SimVascular")
	elseif(SimVascular_RELEASE_TYPE MATCHES "^Beta$")
		set(CPACK_BUNDLE_NAME "SimVascular-Beta")
	endif()

	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/OSX/Info.plist.in 
		${CMAKE_CURRENT_BINARY_DIR}/OSX/Info.plist @ONLY)

	SET(CPACK_BUNDLE_PLIST "${CMAKE_CURRENT_BINARY_DIR}/OSX/Info.plist")
	SET(CPACK_BUNDLE_STARTUP_COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/OSX/simvascular.sh")
	SET(CPACK_PACKAGE_FILE_NAME "simvascular-${SIMVASCULAR_FULL_VERSION}-darwin-x86_64${INSTALL_TYPE_STR}")

	if(SimVascular_DEV_OUTPUT)
		message(STATUS "CPACK_PACKAGE_FILE_NAME: ${CPACK_PACKAGE_FILE_NAME}.dmg")
	endif()
ENDIF(APPLE)

if(WIN32)
	#set(CPACK_PACKAGE_ICON "${CMAKE_CURRENT_SOURCE_DIR}/windows/simvascular.ico")
	#set(CPACK_PACKAGE_EXECUTABLES ${SIMVASCULAR_EXE};SimVascular;)
	#set(CPACK_CREATE_DESKTOP_LINKS ${SIMVASCULAR_EXE})
	set(CPACK_MONOLITHIC_INSTALL 1)
	set(CPACK_COMPONENTS_IGNORE_GROUPS 1)
	find_path(INTEL_REDIST_DIR names fmpich2.dll PATHS $ENV{PATH})
	file(GLOB INTEL_REDIST_DLLS "${INTEL_REDIST_DIR}/*.dll")
	set(CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS ${CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS} ${INTEL_REDIST_DLLS})
	if(MSVC)
		set(CPACK_GENERATOR "WIX")
		set(CPACK_WIX_EXTENSIONS WixUtilExtension)
		set(CPACK_WIX_UI_BANNER ${CMAKE_CURRENT_SOURCE_DIR}/windows/msi-banner.jpg)
		set(CPACK_WIX_UI_DIALOG ${CMAKE_CURRENT_SOURCE_DIR}/windows/msi-dialog.jpg)
		if(SimVascular_RELEASE_TYPE MATCHES "Release")
			set(CPACK_PACKAGE_INSTALL_DIRECTORY "SimVascular/Release")
			set(CPACK_WIX_PROGRAM_MENU_FOLDER "SimVascular")
			set(CPACK_WIX_PRODUCT_GUID "39068F8A-D4E9-405F-B22B-9B417849AEE6")
			set(CPACK_WIX_UPGRADE_GUID "2359EF69-C03F-401C-9BC3-C19B10297E3B")
			set(PACKAGE_NAME "simvascular")
		elseif(SimVascular_RELEASE_TYPE MATCHES "Beta")
			set(CPACK_WIX_PROGRAM_MENU_FOLDER "SimVascular-Beta")
			set(PACKAGE_NAME "simvascular-beta")
			set(CPACK_PACKAGE_INSTALL_DIRECTORY "SimVascular/${TIMESTAMP}")
			set(CPACK_WIX_PRODUCT_GUID "9453BB7E-CD7E-46ED-AA9E-5514B56FC901")
			set(CPACK_WIX_UPGRADE_GUID "39C845FF-68E1-4AA7-B329-3407B47B3361")
		endif()

		SET(CPACK_PACKAGE_FILE_NAME "${PACKAGE_NAME}-${SIMVASCULAR_FULL_VERSION}-Win-x64${INSTALL_TYPE_STR}")
		set(CPACK_WIX_PATCH_FILE "${TEMP_DIR}/patch.xml")
		set(CPACK_WIX_PRODUCT_ICON "${CMAKE_CURRENT_SOURCE_DIR}/windows/SimVascular.ico")
		configure_file("${CMAKE_CURRENT_SOURCE_DIR}/windows/mywix.template-notargets.in" "${CMAKE_CURRENT_BINARY_DIR}/mywix.template")
		set(CPACK_WIX_TEMPLATE "${CMAKE_CURRENT_BINARY_DIR}/mywix.template")
	endif()
endif()

if(CPACK_PACKAGE_FILENAME_TAG)
	SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-${CPACK_PACKAGE_FILENAME_TAG}")
endif()
message(STATUS "Packname name: ${CPACK_PACKAGE_FILE_NAME}")
include(CPack)




#------ dev reference
# COREEXECUTABLES
# CORELIBRARIES
# COREHEADERS

# PLUGINEXECUTABLES
# PLUGINLIBRARIES
# PLUGINHEADERS

# MODULEEXECUTABLES
# MODULELIBRARIES
# MODULEHEADERS

# CPACK_COMPONENT_RUNTIMEEXECUTABLES_DISPLAY_NAME
# CPACK_COMPONENT_RUNTIMEEXECUTABLES_DESCRIPTION
# CPACK_COMPONENT_RUNTIMEEXECUTABLES_DEPENDS